version: "3.10"
services:

  frontend:  # Frontend-часть
    image: sermalenk/skypro-front:lesson-36
    ports:
      - "80:80"
    depends_on:
      - api

  api:  # Backend-часть
    build:
      context: .
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    volumes:  # Для синхронизации изменений в проекте с контейнером
      - ./:/api

  migrations:  # Применение миграций
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
    command: python manage.py migrate

  postgres:  # БД PostgreSQL
    image: postgres:latest
    ports:
      - ${PORT}:${PORT}
    user: ${USER}
    environment:
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
      POSTGRES_DB: ${NAME}
    volumes:
      # Для сохранения информации в БД
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", -U postgres]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:  # Для БД
